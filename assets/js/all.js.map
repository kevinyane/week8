{"version":3,"sources":["all.js","swiper-card.js","swiper.js"],"names":["$","console","log","swiper","Swiper","direction","loop","pagination","el","navigation","nextEl","prevEl","scrollbar","breakpoint","window","matchMedia","mySwiper","breakpointChecker","matches","undefined","destroy","enableSwiper","slidesPerView","spaceBetween","addListener"],"mappings":";;AAAAA,CAAC,CAAC,YAAW;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,CAFA,CAAD;;;ACAA,IAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAW,SAAX,EAAsB;AACnC;AACAC,EAAAA,SAAS,EAAE,UAFwB;AAGnCC,EAAAA,IAAI,EAAE,IAH6B;AAKnC;AACAC,EAAAA,UAAU,EAAE;AACVC,IAAAA,EAAE,EAAE;AADM,GANuB;AAUnC;AACAC,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE,qBADE;AAEVC,IAAAA,MAAM,EAAE;AAFE,GAXuB;AAgBnC;AACAC,EAAAA,SAAS,EAAE;AACTJ,IAAAA,EAAE,EAAE;AADK;AAjBwB,CAAtB,CAAf;;;ACAA,CAAC,YAAW;AAEV,eAFU,CAIV;AACA;;AACA,MAAMK,UAAU,GAAGC,MAAM,CAACC,UAAP,CAAmB,oBAAnB,CAAnB,CANU,CAQV;;AACA,MAAIC,QAAJ,CATU,CAWV;AACA;AACA;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAW;AAEnC;AACA,QAAKJ,UAAU,CAACK,OAAX,KAAuB,IAA5B,EAAmC;AAEjC;AACA,UAAKF,QAAQ,KAAKG,SAAlB,EAA8BH,QAAQ,CAACI,OAAT,CAAkB,IAAlB,EAAwB,IAAxB,EAHG,CAKjC;;AACA,aANiC,CAQjC;AACD,KATD,MASO,IAAKP,UAAU,CAACK,OAAX,KAAuB,KAA5B,EAAoC;AAEzC;AACA,aAAOG,YAAY,EAAnB;AAED;AAEF,GAnBD,CAfU,CAoCV;AACA;AACA;;;AAEA,MAAMA,YAAY,GAAG,SAAfA,YAAe,GAAW;AAE9BL,IAAAA,QAAQ,GAAG,IAAIZ,MAAJ,CAAY,mBAAZ,EAAiC;AAE1CkB,MAAAA,aAAa,EAAE,GAF2B;AAG1CC,MAAAA,YAAY,EAAE;AAH4B,KAAjC,CAAX;AAOD,GATD,CAxCU,CAmDV;AACA;AACA;AAEA;;;AACAV,EAAAA,UAAU,CAACW,WAAX,CAAuBP,iBAAvB,EAxDU,CA0DV;;AACAA,EAAAA,iBAAiB;AAIlB,CA/DD;AA+DM","file":"all.js","sourcesContent":["$(function() {\n  console.log('Hello Bootstrap5');\n});","const swiper = new Swiper('.swiper', {\r\n  // Optional parameters\r\n  direction: 'vertical',\r\n  loop: true,\r\n\r\n  // If we need pagination\r\n  pagination: {\r\n    el: '.swiper-pagination',\r\n  },\r\n\r\n  // Navigation arrows\r\n  navigation: {\r\n    nextEl: '.swiper-button-next',\r\n    prevEl: '.swiper-button-prev',\r\n  },\r\n\r\n  // And if we need scrollbar\r\n  scrollbar: {\r\n    el: '.swiper-scrollbar',\r\n  },\r\n});","(function() {\r\n\r\n  'use strict';\r\n\r\n  // breakpoint where swiper will be destroyed\r\n  // and switches to a dual-column layout\r\n  const breakpoint = window.matchMedia( '(max-width: 992px)' );\r\n\r\n  // keep track of swiper instances to destroy later\r\n  let mySwiper;\r\n\r\n  //////////////////////////////////////////////////////////////////\r\n  //////////////////////////////////////////////////////////////////\r\n  //////////////////////////////////////////////////////////////////\r\n\r\n  const breakpointChecker = function() {\r\n\r\n    // if larger viewport and multi-row layout needed\r\n    if ( breakpoint.matches === true ) {\r\n\r\n      // clean up old instances and inline styles when available\r\n      if ( mySwiper !== undefined ) mySwiper.destroy( true, true );\r\n\r\n      // or/and do nothing\r\n      return;\r\n\r\n      // else if a small viewport and single column layout needed\r\n    } else if ( breakpoint.matches === false ) {\r\n\r\n      // fire small viewport version of swiper\r\n      return enableSwiper();\r\n\r\n    }\r\n\r\n  };\r\n\r\n  //////////////////////////////////////////////////////////////////\r\n  //////////////////////////////////////////////////////////////////\r\n  //////////////////////////////////////////////////////////////////\r\n\r\n  const enableSwiper = function() {\r\n\r\n    mySwiper = new Swiper ('.swiper-container', {\r\n\r\n      slidesPerView: 1.5,\r\n      spaceBetween: 30,\r\n\r\n    });\r\n\r\n  };\r\n\r\n  //////////////////////////////////////////////////////////////////\r\n  //////////////////////////////////////////////////////////////////\r\n  //////////////////////////////////////////////////////////////////\r\n\r\n  // keep an eye on viewport size changes\r\n  breakpoint.addListener(breakpointChecker);\r\n\r\n  // kickstart\r\n  breakpointChecker();\r\n\r\n\r\n\r\n})(); /* IIFE end */"]}